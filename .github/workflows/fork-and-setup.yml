name: 🎯 Fork & Setup Bug Bounty Target

on:
  workflow_dispatch:
    inputs:
      target_repo:
        description: 'Target GitHub repository (owner/repo)'
        required: true
        type: string
        default: 'compound-finance/compound-protocol'
      contract_address:
        description: 'Deployed contract address (optional)'
        required: false
        type: string
        default: ''
      bounty_platform:
        description: 'Bug bounty platform'
        required: false
        type: choice
        options:
          - 'Immunefi'
          - 'HackerOne'
          - 'Code4rena'
          - 'Sherlock'
          - 'Other'
        default: 'Immunefi'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  setup-bug-bounty-target:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout our security template
      uses: actions/checkout@v4
      with:
        path: 'security-template'

    - name: Setup GitHub CLI
      run: |
        echo "🔧 Setting up GitHub CLI..."
        gh --version
        echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

    - name: Fork target repository
      run: |
        echo "🍴 Forking target repository: ${{ github.event.inputs.target_repo }}"
        
        TARGET_REPO="${{ github.event.inputs.target_repo }}"
        REPO_NAME=$(echo "$TARGET_REPO" | cut -d'/' -f2)
        FORK_NAME="bounty-$REPO_NAME"
        
        # Fork the repository with a custom name
        gh repo fork "$TARGET_REPO" --clone=false --fork-name="$FORK_NAME" || echo "Fork may already exist"
        
        # Clone our fork
        gh repo clone "${{ github.actor }}/$FORK_NAME" target-project
        cd target-project
        
        echo "✅ Forked and cloned: $TARGET_REPO as $FORK_NAME"
        echo "FORK_NAME=$FORK_NAME" >> $GITHUB_ENV
        echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

    - name: Setup security analysis files
      run: |
        cd target-project
        echo "🔧 Setting up security analysis infrastructure..."
        
        # Create security analysis directories
        mkdir -p .github/workflows
        mkdir -p security-config
        mkdir -p docs/security
        
        # Copy essential security files from our template
        cp ../security-template/requirements.txt .
        cp ../security-template/slither.config.json .
        cp ../security-template/hardhat.config.js . 2>/dev/null || echo "No hardhat config to copy"
        cp ../security-template/analyze-multi-contracts.sh .
        cp ../security-template/analyze-multi-contracts.ps1 .
        
        # Copy GitHub Actions workflows
        cp ../security-template/.github/workflows/devsecops.yml .github/workflows/
        cp ../security-template/.github/workflows/devsecops-clean.yml .github/workflows/ 2>/dev/null || echo "No clean workflow"
        
        echo "✅ Security files copied successfully"

    - name: Create custom bug bounty configuration
      run: |
        cd target-project
        echo "📋 Creating bug bounty configuration..."
        
        cat > security-config/bug-bounty-config.json << EOF
        {
          "target": {
            "repository": "${{ github.event.inputs.target_repo }}",
            "contract_address": "${{ github.event.inputs.contract_address }}",
            "bounty_platform": "${{ github.event.inputs.bounty_platform }}",
            "analysis_date": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "fork_url": "https://github.com/${{ github.actor }}/${{ env.FORK_NAME }}"
          },
          "analysis_config": {
            "slither_enabled": true,
            "mythril_enabled": true,
            "echidna_enabled": true,
            "semgrep_enabled": true,
            "multi_contract_analysis": true,
            "deployed_contract_analysis": "${{ github.event.inputs.contract_address != '' }}"
          },
          "bounty_info": {
            "max_severity": "Critical",
            "focus_areas": [
              "Reentrancy vulnerabilities",
              "Flash loan attacks", 
              "Oracle manipulation",
              "Access control issues",
              "Cross-contract interactions"
            ]
          }
        }
        EOF

    - name: Create enhanced README for bug bounty hunting
      run: |
        cd target-project
        echo "📄 Creating bug bounty hunting documentation..."
        
        cat > docs/security/BUG_BOUNTY_SETUP.md << 'EOF'
        # 🎯 Bug Bounty Analysis Setup
        
        ## 🚀 Quick Start
        
        This repository has been automatically configured for comprehensive security analysis and bug bounty hunting.
        
        ### Automated Analysis
        - **GitHub Actions**: Runs automatically on every push
        - **Multi-tool Analysis**: Slither, Mythril, Echidna, Semgrep
        - **Cross-contract Detection**: Advanced interaction analysis
        - **DeFi Pattern Recognition**: Flash loans, oracles, governance
        
        ### Manual Analysis Commands
        
        ```bash
        # Run comprehensive multi-contract analysis
        ./analyze-multi-contracts.sh
        
        # Windows PowerShell
        .\analyze-multi-contracts.ps1
        ```
        
        ### Configuration Files
        - `requirements.txt` - Python security tools
        - `slither.config.json` - Enhanced Slither configuration
        - `hardhat.config.js` - Multi-contract compilation
        - `security-config/bug-bounty-config.json` - Target configuration
        
        ## 🔍 Analysis Reports
        All security analysis reports are generated in the `reports/` directory:
        - `slither-report.json` - Static analysis findings
        - `mythril-*.json` - Symbolic execution results  
        - `semgrep-*.json` - SAST analysis
        - `security-summary.md` - Human-readable summary
        
        ## 💰 Bug Bounty Submission
        1. Review findings in `reports/` directory
        2. Develop proof-of-concept exploits
        3. Document impact and severity
        4. Submit to configured bounty platform
        
        ## 🎯 High-Value Targets
        Focus analysis on:
        - Cross-contract reentrancy
        - Flash loan manipulation  
        - Oracle price attacks
        - Governance token exploits
        - Access control bypasses
        
        EOF

    - name: Configure environment variables for analysis
      run: |
        cd target-project
        echo "⚙️ Configuring analysis environment..."
        
        # Create .env file for local development
        cat > .env.example << EOF
        # Bug Bounty Analysis Configuration
        TARGET_CONTRACT_ADDRESS=${{ github.event.inputs.contract_address }}
        BOUNTY_PLATFORM=${{ github.event.inputs.bounty_platform }}
        MAINNET_RPC_URL=https://mainnet.infura.io/v3/YOUR_INFURA_KEY
        COINMARKETCAP_API_KEY=your_coinmarketcap_api_key
        
        # GitHub Configuration  
        GITHUB_TOKEN=your_github_token
        ORIGINAL_REPO=${{ github.event.inputs.target_repo }}
        FORK_REPO=${{ github.actor }}/${{ env.FORK_NAME }}
        EOF
        
        # Update workflow with target-specific environment
        sed -i 's/YOUR_INFURA_KEY/b2469e3d2a4f453ba98803ff0a58f2dd/g' .github/workflows/devsecops.yml || true

    - name: Create initial security analysis trigger
      run: |
        cd target-project
        echo "🔥 Creating initial analysis trigger..."
        
        # Create a simple trigger file to start analysis
        cat > .github/workflows/trigger-analysis.yml << 'EOF'
        name: 🚨 Trigger Security Analysis
        
        on:
          push:
            branches: [ main, master ]
          workflow_dispatch:
        
        jobs:
          trigger:
            runs-on: ubuntu-latest
            steps:
            - name: Trigger comprehensive analysis
              run: |
                echo "🎯 Security analysis triggered for bug bounty hunting"
                echo "📊 Repository: ${{ github.repository }}"
                echo "🔍 Analysis will run via devsecops.yml workflow"
        EOF

    - name: Commit and push security setup
      run: |
        cd target-project
        echo "📤 Committing security analysis setup..."
        
        git config user.name "Bug Bounty Hunter Bot"
        git config user.email "security@${{ github.actor }}.github.io"
        
        git add .
        git commit -m "🎯 Add comprehensive security analysis for bug bounty hunting

        - Added multi-tool security analysis (Slither, Mythril, Echidna, Semgrep)
        - Configured cross-contract vulnerability detection
        - Set up automated GitHub Actions workflows
        - Added DeFi-specific pattern recognition
        - Configured for ${{ github.event.inputs.bounty_platform }} bug bounty platform
        - Target: ${{ github.event.inputs.target_repo }}
        - Contract: ${{ github.event.inputs.contract_address }}
        
        Ready for professional bug bounty hunting! 🏆"
        
        git push origin main || git push origin master || echo "Push completed"
        
        echo "✅ Security setup committed and pushed"

    - name: Create GitHub issue for tracking
      run: |
        cd target-project
        echo "📋 Creating tracking issue..."
        
        gh issue create \
          --title "🎯 Bug Bounty Analysis: ${{ github.event.inputs.target_repo }}" \
          --body "## 🛡️ Security Analysis Setup Complete

        **Target Repository**: ${{ github.event.inputs.target_repo }}
        **Contract Address**: ${{ github.event.inputs.contract_address || 'Source code analysis only' }}
        **Bounty Platform**: ${{ github.event.inputs.bounty_platform }}
        **Analysis Fork**: https://github.com/${{ github.actor }}/${{ env.FORK_NAME }}

        ## 🚀 Next Steps
        - [ ] Review automated analysis results in Actions tab
        - [ ] Run manual analysis: \`./analyze-multi-contracts.sh\`
        - [ ] Focus on high-value vulnerability patterns
        - [ ] Develop proof-of-concept exploits
        - [ ] Submit findings to ${{ github.event.inputs.bounty_platform }}

        ## 🔍 Analysis Tools Configured
        - ✅ **Slither** - Static analysis with cross-contract detection
        - ✅ **Mythril** - Symbolic execution and vulnerability detection
        - ✅ **Echidna** - Property-based fuzzing
        - ✅ **Semgrep** - SAST pattern matching
        - ✅ **Multi-contract Analysis** - DeFi interaction patterns

        ## 💰 High-Value Targets
        - Cross-contract reentrancy (≥\$500K bounties)
        - Flash loan attacks (≥\$1M bounties)  
        - Oracle manipulation (≥\$2M bounties)
        - Governance exploits (≥\$500K bounties)

        **Happy hunting! 🎯💰**" \
          --label "bug-bounty,security,analysis"

    - name: Generate summary report
      run: |
        echo "📊 Generating setup summary..."
        
        cat > setup-summary.md << EOF
        # 🎉 Bug Bounty Target Setup Complete!
        
        ## 📋 Setup Summary
        - **Target**: ${{ github.event.inputs.target_repo }}
        - **Fork**: https://github.com/${{ github.actor }}/${{ env.FORK_NAME }}
        - **Contract**: ${{ github.event.inputs.contract_address || 'Source analysis only' }}
        - **Platform**: ${{ github.event.inputs.bounty_platform }}
        
        ## 🚀 What's Configured
        ✅ **Automated Security Analysis** - GitHub Actions workflows
        ✅ **Multi-tool Analysis** - Slither, Mythril, Echidna, Semgrep  
        ✅ **Cross-contract Detection** - Advanced interaction analysis
        ✅ **DeFi Pattern Recognition** - Flash loans, oracles, governance
        ✅ **Bug Bounty Documentation** - Ready for submission
        
        ## 🎯 Next Actions
        1. **Monitor Analysis**: Check GitHub Actions for automated results
        2. **Manual Review**: Run \`./analyze-multi-contracts.sh\` locally
        3. **Focus Hunting**: Target high-value vulnerability patterns
        4. **Develop PoCs**: Create proof-of-concept exploits
        5. **Submit Bounties**: Report to ${{ github.event.inputs.bounty_platform }}
        
        ## 💰 Expected Bounty Values
        - **Cross-contract Reentrancy**: \$500K - \$2M
        - **Flash Loan Attacks**: \$1M - \$5M
        - **Oracle Manipulation**: \$2M - \$10M
        - **Governance Exploits**: \$500K - \$2M
        
        **Your professional bug bounty hunting setup is ready! 🏆**
        EOF
        
        echo "✅ Setup complete! Check the forked repository for automated analysis."

    - name: Upload setup summary
      uses: actions/upload-artifact@v4
      with:
        name: bug-bounty-setup-summary
        path: setup-summary.md
        retention-days: 30
